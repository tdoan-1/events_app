generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model announcements {
  ann_id   Int     @id @default(autoincrement())
  ann_desc String?
}

model conference {
  conf_id Int       @id @default(autoincrement())
  date    DateTime? @db.Date
  time    DateTime? @db.Time(6)
  talks   talks[]
}

model flags {
  flag_id  Int     @id
  paper_id Int?
  user_id  Int?
  papers   papers? @relation(fields: [paper_id], references: [paper_id], onDelete: NoAction, onUpdate: NoAction)
}

model markers {
  marker_id   Int      @id @default(autoincrement())
  description String?
  papers      papers[]
}

model own_talks {
  user_id    Int
  talk_id    Int
  is_enabled Boolean?

  @@id([user_id, talk_id])
}

model papers {
  paper_id  Int        @id
  marker_id Int
  flags     flags[]
  markers   markers    @relation(fields: [marker_id], references: [marker_id], onDelete: NoAction, onUpdate: NoAction)
  reminder  reminder[]
  session   session[]
}

model reminder {
  rem_id        Int       @id @default(autoincrement())
  paper_id      Int?
  user_id       Int?
  time          DateTime? @db.Timestamp(6)
  been_reminded Boolean?
  papers        papers?   @relation(fields: [paper_id], references: [paper_id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  role_id          Int     @id @default(autoincrement())
  role_description String?
  users            users[]
}

model session {
  ses_id   Int       @id
  paper_id Int?
  date     DateTime? @db.Date
  time     DateTime? @db.Time(6)
  papers   papers?   @relation(fields: [paper_id], references: [paper_id], onDelete: NoAction, onUpdate: NoAction)
}

model talks {
  talk_id    Int         @id @default(autoincrement())
  conf_id    Int?
  talk_desc  String?
  conference conference? @relation(fields: [conf_id], references: [conf_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id Int    @id @default(autoincrement())
  role_id Int?
  roles   roles? @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
}
